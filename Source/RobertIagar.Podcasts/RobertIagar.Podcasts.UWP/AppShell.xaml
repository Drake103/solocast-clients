<Page x:Name="Root"
      x:Class="RobertIagar.Podcasts.UWP.AppShell"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:RobertIagar.Podcasts.UWP"
      xmlns:controls="using:RobertIagar.Podcasts.UWP.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      KeyDown="AppShell_KeyDown"
      TabNavigation="Cycle"
      mc:Ignorable="d">

    <!-- Using a Page as the root for the app provides a design time experience as well as ensures that
         when it runs on Mobile the app content won't appear under the system's StatusBar which is visible 
         by default with a transparent background.  It will also take into account the presence of software
         navigation buttons if they appear on a device.  An app can opt-out by switching to UseCoreWindow.
    -->

    <Page.Resources>
        <DataTemplate x:Key="NavMenuItemTemplate" 
                      x:DataType="local:NavMenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                <FontIcon Grid.Column="0"  
                          x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}" Margin="5,0,0,0"/>
                <TextBlock x:Name="Text" 
                           Grid.Column="1" Text="{x:Bind Label}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <!-- Adaptive triggers -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False"/>
                        <Setter Target="RootSplitView.Margin" Value="0,0,0,95"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactOverlay"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True"/>
                        <Setter Target="Image.Fill" Value="Blue"/>
                        <Setter Target="NowPlayingGrid.Visibility" Value="Collapsed"/>
                        <Setter Target="NavMenuList.Margin"  Value="0,48,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <MediaElement x:Name="MediaPlayer" 
                      Visibility="Collapsed"
                      AudioCategory="BackgroundCapableMedia"
                      AreTransportControlsEnabled="False"/>
        
        <!-- Top-level navigation menu + app content -->
        <SplitView x:Name="RootSplitView"
                   DisplayMode="CompactInline"
                   OpenPaneLength="256"
                   IsTabStop="False"
                   Grid.Row="0">
            <SplitView.Pane>
                <!-- A custom ListView to display the items in the pane.  The automation Name is set in the ContainerContentChanging event. -->
                <controls:NavMenuListView x:Name="NavMenuList"
                                          TabIndex="3"
                                          Margin="0,48,0,0"
                                          ContainerContentChanging="NavMenuItemContainerContentChanging"
                                          ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                          ItemTemplate="{StaticResource NavMenuItemTemplate}"
                                          ItemInvoked="NavMenuList_ItemInvoked">
                    <controls:NavMenuListView.Header>
                        <!-- Using this custom back navigation button until the system-provided back button is enabled. -->
                        <StackPanel>
                            <Button x:Name="BackButton"
                                    TabIndex="2"
                                    Style="{StaticResource NavigationBackButtonStyle}"
                                    IsEnabled="{Binding AppFrame.CanGoBack, ElementName=Root}"
                                    Width="{Binding ItemsPanelRoot.Width, ElementName=NavMenuList}"
                                    HorizontalAlignment="{Binding ItemsPanelRoot.HorizontalAlignment, ElementName=NavMenuList}"
                                    Click="BackButton_Click"/>
                        </StackPanel>
                    </controls:NavMenuListView.Header>
                    <controls:NavMenuListView.Footer>
                        <Button x:Name="SettingsButton" 
                                    ToolTipService.ToolTip="Settings"
                                    TabIndex="4"
                                    Style="{StaticResource NavigationSettingsButtonStyle}"
                                    Width="{Binding ItemsPanelRoot.Width, ElementName=NavMenuList}"
                                    HorizontalAlignment="{Binding ItemsPanelRoot.HorizontalAlignment, ElementName=NavMenuList}"
                                    Click="SettingsButton_Click"/>
                    </controls:NavMenuListView.Footer>
                </controls:NavMenuListView>
            </SplitView.Pane>

            <!-- OnNavigatingToPage we synchronize the selected item in the nav menu with the current page.
                 OnNavigatedToPage we move keyboard focus to the first item on the page after it's loaded. -->
            <Frame x:Name="frame"
                   Navigating="OnNavigatingToPage"
                   Navigated="OnNavigatedToPage">
                <Frame.ContentTransitions>
                    <TransitionCollection>
                        <NavigationThemeTransition>
                            <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                <EntranceNavigationTransitionInfo/>
                            </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                        </NavigationThemeTransition>
                    </TransitionCollection>
                </Frame.ContentTransitions>
            </Frame>
        </SplitView>

        <Grid VerticalAlignment="Bottom"
              Padding="5"
              Background="{StaticResource SystemControlBackgroundBaseLowBrush}"
              Opacity="1" 
              x:Name="NowPlayingGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="79"/>
                <ColumnDefinition Width="512"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Rectangle Grid.Column="0"
                       Height="72"
                       Margin="7"
                       Fill="White"
                       x:Name="Image"/>
            <StackPanel Grid.Column="1"
                        Orientation="Vertical" 
                        VerticalAlignment="Center"
                        Margin="5">
                <TextBlock Text="Monstercat Podcast Ep. 78" Style="{StaticResource TitleTextBlockStyle}"/>
                <TextBlock Text="Monstercat" Style="{StaticResource SubtitleTextBlockStyle}"/>
            </StackPanel>

            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Slider Grid.Column="0"
                        VerticalAlignment="Center"/>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal" VerticalAlignment="Center">
                    <AppBarButton Icon="Play" Label="Play"/>
                    <AppBarButton Icon="Stop" Label="Stop"/>
                    <AppBarButton Icon="Next" Label="Next"/>
                </StackPanel>
            </Grid>
        </Grid>

        

        <!-- Declared last to have it rendered above everything else, but it needs to be the first item in the tab sequence. -->
        <ToggleButton x:Name="TogglePaneButton"
                      TabIndex="1"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Unchecked="TogglePaneButton_Checked"
                      AutomationProperties.Name="Menu"
                      ToolTipService.ToolTip="Menu" />
    </Grid>
</Page>
